name: CI/CD MLflow

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

env:
  CSV_URL: "MLproject/cleaned_training.csv"
  TARGET_VAR: "SeriousDlqin2yrs"

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE
      - uses: actions/checkout@v3

      # Setup Python 3.12.7
      - name: Set up Python 3.12.7
        uses: actions/setup-python@v4
        with:
          python-version: "3.12.7"
      
      # Check Env Variables
      - name: Check Env
        run: |
          echo $CSV_URL
      # Install mlflow
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install mlflow
          
      # Copy MLflow tracking data to workflow directory
      - name: Copy MLflow data
        run: |
          if [ -d "mlruns" ]; then
            cp -r mlruns Workflow-CI/ || echo "mlruns copy failed, continuing..."
          fi
          if [ -d "mlartifacts" ]; then
            cp -r mlartifacts Workflow-CI/ || echo "mlartifacts copy failed, continuing..."
          fi
      
      # Run as a mlflow project
      - name: Run mlflow project
        run: |
          cd Workflow-CI/MLProject
          mlflow run . --env-manager=local
      
      # Get latest run_id
      - name: Get latest MLflow run_id
        run: |
          # First try to find active runs with model in mlartifacts
          RUN_ID=$(find Workflow-CI/mlruns -name "meta.yaml" -path "*/mlruns/*/*/meta.yaml" -exec sh -c 'if [ -d "Workflow-CI/mlartifacts/$(basename $(dirname $(dirname "$1")))/$(basename $(dirname "$1"))/artifacts/model" ] && grep -q "lifecycle_stage: active" "$1"; then stat -c "%Y %n" "$1"; fi' _ {} \; | sort -nr | head -n 1 | cut -d' ' -f2- | xargs dirname | xargs basename)
          
          # If no active runs found, fallback to any run with model (including finished runs)
          if [ -z "$RUN_ID" ]; then
            RUN_ID=$(find Workflow-CI/mlruns -name "meta.yaml" -path "*/mlruns/*/*/meta.yaml" -exec sh -c 'if [ -d "Workflow-CI/mlartifacts/$(basename $(dirname $(dirname "$1")))/$(basename $(dirname "$1"))/artifacts/model" ]; then stat -c "%Y %n" "$1"; fi' _ {} \; | sort -nr | head -n 1 | cut -d' ' -f2- | xargs dirname | xargs basename)
          fi
          
          echo "RUN_ID=$RUN_ID" >> $GITHUB_ENV
          echo "Latest run_id: $RUN_ID"
          
      # Build Docker Model
      - name: Build Docker Model
        env:
          RUN_ID: ${{ env.RUN_ID }}
        run: |
          mlflow models build-docker --model-uri "runs:/$RUN_ID/model" --name "cc"

      # Login to Docker Hub
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      # Tag the Docker image
      - name: Tag Docker Image
        run: |
          docker tag cc ${{ secrets.DOCKER_HUB_USERNAME }}/cc:latest

      # Push Docker image to Docker Hub
      - name: Push Docker Image
        run: |
          docker push ${{ secrets.DOCKER_HUB_USERNAME }}/cc:latest
