# Prometheus configuration file
global:
  scrape_interval: 15s
  evaluation_interval: 15s
  external_labels:
    monitor: 'ml-monitoring'
    project: 'credit-scoring'

# Alertmanager configuration
alerting:
  alertmanagers:
    - static_configs:
        - targets:
          - alertmanager:9093

# Load rules once and periodically evaluate them according to the global 'evaluation_interval'.
rule_files:
  - "alert_rules.yml"

# A scrape configuration containing exactly one endpoint to scrape:
scrape_configs:
  # The job name is added as a label `job=<job_name>` to any timeseries scraped from this config.
  - job_name: 'prometheus'
    static_configs:
      - targets: ['localhost:9090']
    scrape_interval: 5s
    metrics_path: /metrics

  # ML Model Inference Service
  - job_name: 'ml-inference'
    static_configs:
      - targets: ['localhost:5000']
    scrape_interval: 10s
    metrics_path: /metrics
    scrape_timeout: 10s
    honor_labels: true
    params:
      format: ['prometheus']

  # Custom Prometheus Exporter
  - job_name: 'ml-exporter'
    static_configs:
      - targets: ['localhost:8000']
    scrape_interval: 15s
    metrics_path: /metrics
    scrape_timeout: 10s

  # Node Exporter for system metrics
  - job_name: 'node-exporter'
    static_configs:
      - targets: ['localhost:9100']
    scrape_interval: 15s
    metrics_path: /metrics

  # Docker containers (if using Docker)
  - job_name: 'docker'
    static_configs:
      - targets: ['localhost:9323']
    scrape_interval: 30s
    metrics_path: /metrics

  # MLflow Tracking Server (if running)
  - job_name: 'mlflow'
    static_configs:
      - targets: ['localhost:5001']
    scrape_interval: 30s
    metrics_path: /metrics
    scrape_timeout: 10s

  # Application Performance Monitoring
  - job_name: 'apm-server'
    static_configs:
      - targets: ['localhost:8200']
    scrape_interval: 30s
    metrics_path: /metrics

# Remote write configuration (optional - for long-term storage)
# remote_write:
#   - url: "http://localhost:8086/api/v1/prom/write?db=prometheus"
#     queue_config:
#       max_samples_per_send: 1000
#       max_shards: 200
#       capacity: 2500

# Remote read configuration (optional)
# remote_read:
#   - url: "http://localhost:8086/api/v1/prom/read?db=prometheus"